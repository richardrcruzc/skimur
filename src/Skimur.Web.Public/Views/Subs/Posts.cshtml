@using Subs
@using Subs.ReadModel
@model SubPostsModel
@{
    Layout = "~/Views/Shared/_LayoutFull.cshtml";
}

@helper AppendSortUrl(string baseUrl, string sort)
{
    if (string.IsNullOrEmpty(baseUrl) || baseUrl == "/")
    {
        @("/" + sort)
    }
    else
    {
        if (string.IsNullOrEmpty(sort))
        {
            @(baseUrl)
        }
        else
        {
            @(baseUrl + "/" + sort)
        }
    }
}

@section header {

    @{
        string urlBase;

        if (Model.Sub != null)
        {
            urlBase = "/s/" + Model.Sub.Sub.Name;
        }
        else
        {
            urlBase = "/";
        }
    }
    <div class="sub-header">
        <div class="hidden-xs">
            <ul class="nav nav-tabs sort">
                <li class="@(Model.SortBy == PostsSortBy.Hot ? "active" : null)"><a href="@AppendSortUrl(urlBase, null)">Hot</a></li>
                <li class="@(Model.SortBy == PostsSortBy.New ? "active" : null)"><a href="@AppendSortUrl(urlBase, "new")">New</a></li>
                <li class="@(Model.SortBy == PostsSortBy.Controversial ? "active" : null)"><a href="@AppendSortUrl(urlBase, "controversial")">Controversial</a></li>
                <li class="@(Model.SortBy == PostsSortBy.Top ? "active" : null)"><a href="@AppendSortUrl(urlBase, "top")">Top</a></li>
            </ul>
        </div>
        <div class="visible-xs-block">
            <ul class="nav nav-tabs sort">
                <li class="dropdown active">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="javascript:void(0);">
                        @Model.SortBy.ToString() <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li class="@(Model.SortBy == PostsSortBy.Hot ? "active" : null)"><a href="@AppendSortUrl(urlBase, null)">Hot</a></li>
                        <li class="@(Model.SortBy == PostsSortBy.New ? "active" : null)"><a href="@AppendSortUrl(urlBase, "new")">New</a></li>
                        <li class="@(Model.SortBy == PostsSortBy.Controversial ? "active" : null)"><a href="@AppendSortUrl(urlBase, "controversial")">Controversial</a></li>
                        <li class="@(Model.SortBy == PostsSortBy.Top ? "active" : null)"><a href="@AppendSortUrl(urlBase, "top")">Top</a></li>
                    </ul>
                </li>
            </ul>
        </div>
    </div>

}

<div class="row">
    <div class="col-lg-9 col-sm-8">
        @if (Model.Posts != null)
        {
            foreach (var post in Model.Posts)
            {
                @Html.Partial("_Post", post)
            }
            if (Model.Posts.HasPreviousPage || Model.Posts.HasNextPage)
            {
                <div class="row">
                    <div class="list-pager">
                        @Html.Pager(Model.Posts)
                    </div>
                </div>
            }
        }
    </div>
    <div class="col-lg-3 col-sm-4">

        @Html.Partial("_SideBarSearch", new ViewDataDictionary(Model.Sub))

        <div class="panel">
            <a href="@Url.CreatePost()" class="btn btn-primary btn-block submit-link">Submit a new link</a>
            <a href="@Url.CreatePost()" class="btn btn-primary btn-block submit-post">Submit a new post</a>
        </div>

        @if (Model.Sub != null)
        {
            @Html.Action("ModerationSideBar", new { subId = Model.Sub.Sub.Id })
        }
        
        <a href="javascript:void(0);" onclick="return skimurui.flair.openFlairBox(this);">Change flair</a>
        @Html.Partial("~/Views/Flair/_FlairsModal.cshtml", new ListFlairViewModel())    
        
    </div>
</div>