@using Subs.ReadModel
@model ICommentNode
<div class="comment" @if (Model.NodeType == NodeType.Comment) { var comment = ((CommentNode)Model).Comment; @("data-comment-id=" + comment.Comment.Id + " data-post-id=" + comment.Comment.PostId + "")   }>
    @if (Model.NodeType == NodeType.Comment)
    {
        @Html.Partial("_CommentBody", (CommentNode)Model)
    }
    else if (Model.NodeType == NodeType.MoreRecursion)
    {
        var comment = ((MoreRecursionNode)Model).Comment;
        <div class="comments-container">
            <a href="@Url.Comment(comment.Sub.Name, comment.Post, comment.Comment)">Continue thread...</a>
        </div>
    }
    else if (Model.NodeType == NodeType.MoreChildren)
    {
        var moreChildren = (MoreChildren)Model;
        var children = string.Join(", ", moreChildren.ChildComments);
        // TODO
        <a href="javascript:void(0);" onclick="return skimurui.comments.moreChildren(this, '@moreChildren.PostId', '@moreChildren.Sort', '@children', @moreChildren.Depth)">Load more children...</a> <span>(@moreChildren.MissingCount @(moreChildren.MissingCount != 1 ? "replies" : "reply"))</span>
    }

    @if (Model.Children != null && Model.Children.Count > 0)
    {
        foreach (var child in Model.Children)
        {
            @Html.Partial("_CommentNode", child)
        }
    }
</div>